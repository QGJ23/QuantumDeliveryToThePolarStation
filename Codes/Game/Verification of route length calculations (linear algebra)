# After its calculations, the user enters the route 
# in the interface field and can check the correctness
# of the calculation by clicking the "Check route" button.
# If the calculation was incorrect, the system displays 
# the error "Calculation is incorrect, repeat the calculation"
#-------------------------
# User input his Rout in interface
Routs = [0, 1, 3, 4, 3, 0]
IFB = 200000 # Initial fuel Initial fuel quantity at the base: 200 tons.
FB = IFB
FCEA = 2000 # Fuel consumption of an empty aircraft: 2000 l/100 km.
FCEL = 15 # Fuel consumption with equipment load : +15% l/100 km.
#print(Routs[2], len(Routs), Routs.index(1))
CD = 0 # Common distance
CFC = 0 # Common Fuel consumption

for i in range(len(Routs)-1):
    d = Distance[Routs[i], Routs[i+1]]
    CD = CD + d
    FC = d*2000/100 # fuel consumption
    FB = FB - FC # Fuel balance
    print(Routs[i], "--->", Routs[i+1], "Distanse:", d, "fuel consumption:", FC, "Fuel balance:", FB)
    if FB < 0:
        print(Routs[i], "--->", Routs[i+1], "Distanse:", d, "fuel consumption:", FC, "Fuel balance:", FB, "Lack of fuel on route ")
        break
    if Routs[i+1] == 2:
        FB = IFB
        print("Refueling in Sattion 1 ")
    if Routs[i+1] == 3:
        FB = IFB
        print("Refueling in Sattion 2 ")
    #print(Routs[i], "--->", Routs[i+1], "Distanse:", d, "fuel consumption:", FC, "Fuel balance:", FB)
if FB > 0:
    print("Rout culculation is correct, create the quantum circuit to get the Polar Station !", "Common distance:", CD)


